{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/Loader/Loader.tsx","components/PostDetails/PostDetails.tsx","api/api.ts","api/posts.ts","api/comments.ts","App.tsx","index.tsx"],"names":["PostsList","userPosts","setSelectedPostId","selectedPostId","useState","isOpen","setIsOpen","className","map","userId","title","id","type","onClick","current","onClickHandle","NewCommentForm","lastCommentId","handleSubmit","postId","name","setName","email","setEmail","userMessage","setUserMessage","onSubmit","event","body","createdAt","Date","updatedAt","value","placeholder","onChange","target","Loader","PostDetails","postDetails","comments","handleDeleteComment","isHide","setIsHide","length","prev","BASE_URL","request","url","a","data","fetch","response","Error","URL","json","getPostComments","App","selectedUserId","setSelectedUserId","setUserPost","setPostDetails","setComments","setLastCommentId","useEffect","getUserPosts","then","res","getPostDetails","Number","commentId","method","deletePostComment","filter","comment","preventDefault","sort","b","headers","JSON","stringify","addPostComment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c98e9ae.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  userPosts: Post[] | null;\n  setSelectedPostId(id: number): void;\n  selectedPostId: number;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  userPosts, setSelectedPostId, selectedPostId,\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n\n  const onClickHandle = (id: number) => {\n    if (selectedPostId === id) {\n      setSelectedPostId(0);\n      setIsOpen(current => !current);\n    } else {\n      setSelectedPostId(id);\n      setIsOpen(true);\n    }\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {\n          userPosts && (\n            userPosts.map(({ userId, title, id }) => (\n              userId && (\n                <li className=\"PostsList__item\" key={id}>\n                  <div>\n                    <b>\n                      [User #\n                      {userId}\n                      ]:\n                    </b>\n                    {title}\n                  </div>\n\n                  <button\n                    type=\"button\"\n                    className=\"PostsList__button button\"\n                    onClick={() => onClickHandle(id)}\n                  >\n                    {(isOpen && selectedPostId === id) ? 'Close' : 'Open'}\n                  </button>\n                </li>\n              )\n            ))\n          )\n        }\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  lastCommentId: number;\n  handleSubmit(event: React.SyntheticEvent, comment: UserComment): void;\n  postId: number;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ lastCommentId, handleSubmit, postId }) => {\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [userMessage, setUserMessage] = useState<string>('');\n\n  const commentBuilder = (): UserComment => {\n    setName('');\n    setEmail('');\n    setUserMessage('');\n\n    return {\n      id: lastCommentId,\n      postId,\n      name,\n      email,\n      body: userMessage,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={(event) => handleSubmit(event, commentBuilder())}>\n      <div className=\"form-field\">\n        <input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={email}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={userMessage}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={(event) => setUserMessage(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Loader } from '../Loader';\nimport './PostDetails.scss';\n\ntype Props = {\n  postDetails: Post | null;\n  comments: UserComment[];\n  handleDeleteComment(commentId: number): void;\n  lastCommentId: number;\n  handleSubmit(event: React.SyntheticEvent, comment: UserComment): void;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  postDetails, comments, handleDeleteComment, lastCommentId, handleSubmit,\n}) => {\n  const [isHide, setIsHide] = useState(true);\n\n  return (\n    <>\n      {\n        !comments.length && (\n          <Loader />\n        )\n      }\n\n      {\n        !!comments.length && postDetails && (\n          <div className=\"PostDetails\">\n            <h2>\n              Post details:\n            </h2>\n\n            <section className=\"PostDetails__post\">\n              <p>{postDetails.body}</p>\n            </section>\n\n            <section className=\"PostDetails__comments\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setIsHide(prev => !prev)}\n              >\n                {\n                  !comments.length && (\n                    <>\n                      No comments\n                    </>\n                  )\n                }\n                {\n                  !!comments.length && (\n                    <>\n                      {!isHide ? 'Hide ' : 'Show '}\n                      {comments?.length}\n                      {' '}\n                      comments\n                    </>\n                  )\n                }\n              </button>\n\n              <ul className=\"PostDetails__list\">\n                {\n                  !isHide && (\n                    comments.map(({ id, body }) => (\n                      <li key={id} className=\"PostDetails__list-item\">\n                        <button\n                          type=\"button\"\n                          className=\"PostDetails__remove-button button\"\n                          onClick={() => handleDeleteComment(id)}\n                        >\n                          X\n                        </button>\n                        <p>{body}</p>\n                      </li>\n                    ))\n                  )\n                }\n              </ul>\n            </section>\n\n            <section>\n              <div className=\"PostDetails__form-wrapper\">\n                <NewCommentForm\n                  lastCommentId={lastCommentId}\n                  handleSubmit={handleSubmit}\n                  postId={postDetails.id}\n                />\n              </div>\n            </section>\n          </div>\n        )\n      }\n    </>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function request(url: string, data = {}) {\n  try {\n    const response = await fetch(`${BASE_URL}/${url}`, data);\n\n    return response;\n  } catch {\n    throw new Error('Fetch failed');\n  }\n}\n","import { request } from './api';\n\nexport async function getUserPosts(userId?: number): Promise<Post[]> {\n  const URL = userId ? `/posts?userId=${userId}` : '/posts';\n  const response = (await request(URL)).json();\n\n  return response;\n}\n\nexport async function getPostDetails(postId: number) {\n  const URL = `/posts/${postId}`;\n  const response = (await request(URL)).json();\n\n  return response;\n}\n","import { request } from './api';\n\nexport const getPostComments = async (postId?: number) => {\n  const URL = postId ? `/comments?postId=${postId}` : '/comments';\n  const response = (await request(URL)).json();\n\n  return response;\n};\n\nexport const deletePostComment = (commentId: number) => request(`/comments/${commentId}`, { method: 'DELETE' });\n\nexport const addPostComment = (comment: UserComment) => {\n  return request('/comments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(comment),\n  });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getPostDetails } from './api/posts';\nimport { getPostComments, deletePostComment, addPostComment } from './api/comments';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [selectedPostId, setSelectedPostId] = useState<number>(0);\n  const [userPosts, setUserPost] = useState<Post[] | null>(null);\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [comments, setComments] = useState<UserComment[]>([]);\n  const [lastCommentId, setLastCommentId] = useState<number>(0);\n\n  const handleDeleteComment = (commentId: number) => {\n    deletePostComment(commentId);\n    setComments(current => current?.filter(comment => comment.id !== commentId) || null);\n  };\n\n  const handleSubmit = (event: React.SyntheticEvent, comment: UserComment) => {\n    event.preventDefault();\n    getPostComments().then(\n      res => setLastCommentId(\n        [...res].sort((a: UserComment, b: UserComment) => a.id - b.id)[res.length - 1].id,\n      ),\n    );\n    setComments(prev => ([...prev, comment]));\n    addPostComment(comment);\n  };\n\n  useEffect(() => {\n    getUserPosts(selectedUserId).then(res => setUserPost(res));\n  }, [selectedUserId]);\n\n  useEffect(() => {\n    if (selectedPostId) {\n      getPostDetails(selectedPostId).then(res => setPostDetails(res));\n      getPostComments(selectedPostId).then(res => setComments(res));\n    } else {\n      setComments([]);\n    }\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select className=\"App__user-selector\" onChange={(event) => setSelectedUserId(Number(event.target.value))}>\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userPosts={userPosts}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {\n          !!selectedPostId && (\n            <div className=\"App__content\">\n              <PostDetails\n                postDetails={postDetails}\n                comments={comments}\n                handleDeleteComment={handleDeleteComment}\n                lastCommentId={lastCommentId}\n                handleSubmit={handleSubmit}\n              />\n            </div>\n          )\n        }\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}